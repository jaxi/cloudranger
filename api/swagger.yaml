---
swagger: "2.0"
info:
  description: "\n# Welcome to CloudRanger\n\nHere are some instructions on  how to\
    \ use the API\n\n## Authentication and Authorization \n * Access to the API is\
    \ controlled by your API key generated in the CloudRanger dashboard and token\n\
    \ * The token is returned by calling the /authorize endpoint and supplying the\
    \ x-api-key header\n * All other calls use the x-api-key header and the Authorzation\
    \ header with Bearer followed by your token\n"
  version: "2018-05"
  title: "CloudRanger API"
host: "api.cloudranger.com"
basePath: "/201805"
tags:
- name: "Accounts"
  description: "Accounts in your CloudRanger Organization"
- name: "Backups"
  description: "Backups in your CloudRanger Account"
- name: "Servers"
  description: "Servers in your CloudRanger Account"
- name: "Restores"
  description: "Restores in your CloudRanger Account"
- name: "Policies"
  description: "Policies in your CloudRanger Account"
- name: "Organization"
  description: "Your CloudRanger Organization and how to authenticate API Calls"
- name: "Audits"
  description: "Audit entries in your CloudRanger Account"
- name: "AWS"
  description: "AWS Details of your CloudRanger Account"
- name: "Credential"
  description: "Credentials of your CloudRanger Account"
- name: "Globals"
  description: "Global search in your CloudRanger Account"
- name: "Jobs"
  description: "Jobs in your CloudRanger Account"
- name: "Logs"
  description: "Logs of your CloudRanger Account"
- name: "Members"
  description: "Members in your CloudRanger Account"
- name: "Schedules"
  description: "Schedules in your CloudRanger Account"
- name: "Search"
  description: "Search in your CloudRanger Account"
- name: "Synchronization"
  description: "Synchronization in your CloudRanger Account"
- name: "Volumes"
  description: "Volumes in your CloudRanger Account"
- name: "Weekly Savings"
  description: "Weekly Savings by your CloudRanger Account"
schemes:
- "https"
paths:
  /authorize:
    get:
      tags:
      - "Organization"
      description: "Use the API key to get your authenticaiton token"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Token"
      security:
      - api_key: []
    options:
      tags:
      - "Organization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}:
    get:
      tags:
      - "Organization"
      description: "Returns the details of the associated organization"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Organization"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Organization"
      description: "Update organization details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Organization"
        required: true
        schema:
          $ref: "#/definitions/Organization"
        x-exportParamName: "Organization"
      responses:
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Organization"
      consumes:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts:
    get:
      tags:
      - "Accounts"
      description: "Returns the account details of the associated organization"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Accounts"
      description: "Creates the account ib the organization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "OrganizationAccountCreate"
        required: true
        schema:
          $ref: "#/definitions/OrganizationAccountCreate"
        x-exportParamName: "OrganizationAccountCreate"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Account"
      security:
      - API_Authorizer: []
    options:
      tags:
      - "Accounts"
      consumes:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}:
    get:
      tags:
      - "Accounts"
      description: "Get account details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Account"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Accounts"
      description: "update account details of specific account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Account"
        required: true
        schema:
          $ref: "#/definitions/Account"
        x-exportParamName: "Account"
      responses:
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Accounts"
      description: "Delete account details of specific account"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Accounts"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/audits:
    get:
      tags:
      - "Audits"
      description: "Get audit details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Audit"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Audits"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/audits/count:
    get:
      tags:
      - "Audits"
      description: "Get audit count"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Audits"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/aws/regions:
    get:
      tags:
      - "AWS"
      description: "Get AWS region details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Region"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "AWS"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/aws/regions/{region}/azs:
    get:
      tags:
      - "AWS"
      description: "Get amazon availibility zone details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "AWS"
      consumes:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/aws/regions/{region}/securitygroups:
    get:
      tags:
      - "AWS"
      description: "Get amazon secutiy groups details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "AWS"
      consumes:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/aws/regions/{region}/sshkeys:
    get:
      tags:
      - "AWS"
      description: "Get amazon ssh keys details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SSHKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "AWS"
      consumes:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/aws/regions/{region}/subnets:
    get:
      tags:
      - "AWS"
      description: "get subnets details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "AWS"
      consumes:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups:
    get:
      tags:
      - "Backups"
      description: "Get backups details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Backup"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/count:
    get:
      tags:
      - "Backups"
      description: "get backups count details of specific account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/BackupsCount"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/count/tag:
    post:
      tags:
      - "Backups"
      description: "Get total count and already gone count for backups tag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "BackupsCountsTagRequest"
        required: true
        schema:
          $ref: "#/definitions/BackupsCountsTagRequest"
        x-exportParamName: "BackupsCountsTagRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CountTag"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/tags/keys:
    get:
      tags:
      - "Backups"
      description: "Returns the tag keys for backups created by the given account\
        \ of the specific organization"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/tags/values:
    post:
      tags:
      - "Backups"
      description: "Get tags keys value details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "BackupsTagsValuesRequest"
        required: true
        schema:
          $ref: "#/definitions/BackupsTagsValuesRequest"
        x-exportParamName: "BackupsTagsValuesRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsValue"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/{backup_id}:
    get:
      tags:
      - "Backups"
      description: "Returns the backup assciated with the given backup id"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/BackupDetailOne"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Backups"
      description: "Updates the backup attributes of the given backup id"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "BackupDetailOne"
        required: true
        schema:
          $ref: "#/definitions/BackupDetailOne"
        x-exportParamName: "BackupDetailOne"
      responses:
        200:
          description: "200 response"
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Backups"
      description: "Deletes the backup with the given id"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/{backup_id}/amirestore:
    post:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "AmiRestoreRequest"
        required: true
        schema:
          $ref: "#/definitions/AmiRestoreRequest"
        x-exportParamName: "AmiRestoreRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AmiRestore"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/AmiRestore"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/{backup_id}/attachrestore:
    post:
      tags:
      - "Backups"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/{backup_id}/filerestore:
    post:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "FileRestore"
        required: true
        schema:
          $ref: "#/definitions/FileRestore"
        x-exportParamName: "FileRestore"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Restore"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/backups/{backup_id}/volumerestore:
    post:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "VolumeRestore"
        required: true
        schema:
          $ref: "#/definitions/VolumeRestore"
        x-exportParamName: "VolumeRestore"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Restore"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Backups"
      consumes:
      - "application/json"
      parameters:
      - name: "backup_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BackupId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/credential:
    get:
      tags:
      - "Credential"
      description: "Returns the credentials of the given account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Credential"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Credential"
      description: "Updates the credentials of the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "CredentialsRequest"
        required: true
        schema:
          $ref: "#/definitions/CredentialsRequest"
        x-exportParamName: "CredentialsRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Credential"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Credential"
      description: "Updates the credentials of the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "CredentialsRequest"
        required: true
        schema:
          $ref: "#/definitions/CredentialsRequest"
        x-exportParamName: "CredentialsRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Credential"
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Credential"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/credential/refresh:
    post:
      tags:
      - "Credential"
      description: "Refreshes the permissions of a given account via cloud formation\
        \ script"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Credential"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/credential/test:
    post:
      tags:
      - "Credential"
      description: "Checks whether Account Access Role ARN is configured"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Credential"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Credential"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/globals/search/{query}:
    get:
      tags:
      - "Globals"
      description: "Returns the result of the query after running the query"
      produces:
      - "application/json"
      parameters:
      - name: "query"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Query"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SearchQuery"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Globals"
      consumes:
      - "application/json"
      parameters:
      - name: "query"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Query"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs:
    get:
      tags:
      - "Jobs"
      description: "Returns the list of jobs associated to the given account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Job"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/range/{min_seq}/{count}:
    get:
      tags:
      - "Jobs"
      description: "Returns the job list of count and range specified in the URL for\
        \ the given account"
      produces:
      - "application/json"
      parameters:
      - name: "count"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Count"
      - name: "min_seq"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MinSeq"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Job"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "count"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Count"
      - name: "min_seq"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MinSeq"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/search:
    post:
      tags:
      - "Jobs"
      description: "Returns the existing jobs of the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "JobSearchRequest"
        required: true
        schema:
          $ref: "#/definitions/JobSearchRequest"
        x-exportParamName: "JobSearchRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Job"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/tags/{tag_key}:
    get:
      tags:
      - "Jobs"
      description: "Returns the tag key of the specific job of the provided account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "tag_key"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TagKey"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "tag_key"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TagKey"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/tags/{tag_key}/{tag_value}:
    get:
      tags:
      - "Jobs"
      description: "Returns the tag value of the tag key related to specific job of\
        \ the given account"
      produces:
      - "application/json"
      parameters:
      - name: "tag_value"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TagValue"
      - name: "tag_key"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TagKey"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsValue"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "tag_value"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TagValue"
      - name: "tag_key"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TagKey"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/{job_id}:
    get:
      tags:
      - "Jobs"
      description: "Returns the job associated with the given job id of the provided\
        \ account"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "Returns a job by job id"
          schema:
            $ref: "#/definitions/Job"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/{job_id}/logs:
    get:
      tags:
      - "Jobs"
      description: "Returns the logs of the given job"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Job"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/{job_id}/retry:
    post:
      tags:
      - "Jobs"
      description: "Retries the job of the given id"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/{job_id}/tasks:
    get:
      tags:
      - "Jobs"
      description: "Returns all the tasks associated with the given job id"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/JobTask"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/{job_id}/tasks/{task_id}/logs:
    get:
      tags:
      - "Jobs"
      description: "Returns the logs of a specific task associated with the provided\
        \ job"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "task_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/JobTask"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "task_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/jobs/{job_id}/tasks/{task_id}/steps/{step_id}/retry:
    post:
      tags:
      - "Jobs"
      description: "Retries the specific step in the log of assocaited task of the\
        \ provided job"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "task_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "step_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "StepId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Jobs"
      consumes:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobId"
      - name: "task_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "step_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "StepId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/log_count:
    get:
      tags:
      - "Logs"
      description: "Returns the log count of the provided account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Logs"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/logs:
    get:
      tags:
      - "Logs"
      description: "Returns the logs of the given account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Logs"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/members:
    get:
      tags:
      - "Members"
      description: "Returns the members of the given account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Member"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Members"
      description: "Creates the members of the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "AccountMemberRequest"
        required: true
        schema:
          $ref: "#/definitions/AccountMemberRequest"
        x-exportParamName: "AccountMemberRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Member"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Members"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/members/{member_id}:
    put:
      tags:
      - "Members"
      description: "Updates the specific member of the account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "member_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MemberId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "AccountMemberRequest"
        required: true
        schema:
          $ref: "#/definitions/AccountMemberRequest"
        x-exportParamName: "AccountMemberRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Member"
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Members"
      description: "Deletes the specific member of the account"
      parameters:
      - name: "member_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MemberId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Members"
      consumes:
      - "application/json"
      parameters:
      - name: "member_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MemberId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies:
    get:
      tags:
      - "Policies"
      description: "Returns the policies associated with the account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Policy"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Policies"
      description: "Creates the policy for the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Policy"
        required: true
        schema:
          $ref: "#/definitions/Policy"
        x-exportParamName: "Policy"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Policy"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Policy"
        required: true
        schema:
          $ref: "#/definitions/Policy"
        x-exportParamName: "Policy"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Policy"
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Policies"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/count:
    get:
      tags:
      - "Policies"
      description: "Returns the count of policies for the specific account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/tags/keys:
    get:
      tags:
      - "Policies"
      description: "Returns the tag keys of the provided policy of an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/tags/values:
    post:
      tags:
      - "Policies"
      description: "Creates the values of the tags associated with the policies of\
        \ an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "TagsValueRequest"
        required: true
        schema:
          $ref: "#/definitions/TagsValueRequest"
        x-exportParamName: "TagsValueRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsValue"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}:
    get:
      tags:
      - "Policies"
      description: "Returns the specific policy of an account"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Policy"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Policies"
      description: "Updates the specific policy of an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Policy"
        required: true
        schema:
          $ref: "#/definitions/Policy"
        x-exportParamName: "Policy"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Policy"
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Policies"
      description: "Deletes the specific policy associated with the given account."
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/backups_count:
    get:
      tags:
      - "Policies"
      description: "Returns the backups count of the specific policy of an account"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/clone:
    post:
      tags:
      - "Policies"
      description: "Creates the clone of the policy to any other account of the same\
        \ organization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "PolicyCloneRequest"
        required: true
        schema:
          $ref: "#/definitions/PolicyCloneRequest"
        x-exportParamName: "PolicyCloneRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PolicyCloneResponse"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/execute:
    post:
      tags:
      - "Policies"
      description: "Initiate the execution process of a specific policy associated\
        \ to an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/import:
    post:
      tags:
      - "Policies"
      description: "Imports the specific policy associated to the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "ImportBackupRequest"
        required: true
        schema:
          $ref: "#/definitions/ImportBackupRequest"
        x-exportParamName: "ImportBackupRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Policy"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/logs_count:
    get:
      tags:
      - "Policies"
      description: "Returns the log counts of a specific policy associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/objects:
    get:
      tags:
      - "Policies"
      description: "Returns all objects i.e. servers of the specific policy related\
        \ to the given account"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PolicyObject"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/policies/{policy_id}/objects/{server_id}:
    delete:
      tags:
      - "Policies"
      description: "Deletes the specific server associated with the policy of the\
        \ given account"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Policies"
      consumes:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "PolicyId"
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/restores:
    get:
      tags:
      - "Restores"
      description: "Returns all restores associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Restore"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Restores"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/restores/{restore_id}:
    get:
      tags:
      - "Restores"
      description: "Returns the specific restore associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "restore_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "RestoreId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Restore"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Restores"
      description: "Deletes the specific restore associated to an account"
      parameters:
      - name: "restore_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "RestoreId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Restores"
      consumes:
      - "application/json"
      parameters:
      - name: "restore_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "RestoreId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules:
    get:
      tags:
      - "Schedules"
      description: "Returns all schedules associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Schedule"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Schedules"
      description: "Creates the schedules associated to the specific account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Schedule"
        required: true
        schema:
          $ref: "#/definitions/Schedule"
        x-exportParamName: "Schedule"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Schedule"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/average:
    get:
      tags:
      - "Schedules"
      description: "Returns the average of all the schedules associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ScheduleAverage"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/count:
    get:
      tags:
      - "Schedules"
      description: "Returns the count of all the schedules associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/tags/keys:
    get:
      tags:
      - "Schedules"
      description: "Returns the keys of tags of the schedules associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/tags/values:
    post:
      tags:
      - "Schedules"
      description: "Creates the values of the tags associated with the schedule of\
        \ an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "TagsValueRequest"
        required: true
        schema:
          $ref: "#/definitions/TagsValueRequest"
        x-exportParamName: "TagsValueRequest"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/{schedule_id}:
    get:
      tags:
      - "Schedules"
      description: "Returns the specific schedule associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Schedule"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Schedules"
      description: "Updates the specific schedule associated to an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Schedule"
        required: true
        schema:
          $ref: "#/definitions/Schedule"
        x-exportParamName: "Schedule"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Schedule"
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/{schedule_id}/servers:
    get:
      tags:
      - "Schedules"
      description: "Returns all the servers of the specific schedule associated to\
        \ an account"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Server"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/{schedule_id}/servers/{server_id}:
    delete:
      tags:
      - "Schedules"
      description: "Deletes the specific server associated to the given schedule of\
        \ an account"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/{schedule_id}/start:
    post:
      tags:
      - "Schedules"
      description: "Starts the specific schedule associated to an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/{schedule_id}/stop:
    post:
      tags:
      - "Schedules"
      description: "Stops the specific schedule associated to the account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/schedules/{schedule_id}/times:
    get:
      tags:
      - "Schedules"
      description: "Returns the number of times specific schedule is turned on associated\
        \ to the given account"
      produces:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ScheduleTime"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Schedules"
      consumes:
      - "application/json"
      parameters:
      - name: "schedule_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ScheduleId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/search:
    get:
      tags:
      - "Search"
      description: "Returns the results based on the query associated the specific\
        \ account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Search"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers:
    get:
      tags:
      - "Servers"
      description: "Returns all the servers assocaited to the given account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AccountServer"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Servers"
      description: "Creates/Attaches a server to an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "AccountServerRequest"
        required: true
        schema:
          $ref: "#/definitions/AccountServerRequest"
        x-exportParamName: "AccountServerRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AccountServer"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/count:
    get:
      tags:
      - "Servers"
      description: "Returns the count of the servers associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/BackupsCount"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/ids:
    get:
      tags:
      - "Servers"
      description: "Returns the ids of the servers associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/InstanceDetail"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/region/{region}:
    get:
      tags:
      - "Servers"
      description: "Returns the region associated to the servers of the given account"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RegionDeatil"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
  /organizations/{organization_id}/accounts/{account_id}/servers/regions/{region}:
    get:
      tags:
      - "Servers"
      description: "Returns the specific region associated to the servers of the given\
        \ account"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/empty"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "region"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/stats:
    get:
      tags:
      - "Servers"
      description: "Returns the statistics of the servers associated to the given\
        \ account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ServerState"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/tags/count:
    post:
      tags:
      - "Servers"
      description: "Returns the count of the tags that are associated with the servers\
        \ of the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Tag"
        required: true
        schema:
          $ref: "#/definitions/Tag"
        x-exportParamName: "Tag"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/tags/keys:
    get:
      tags:
      - "Servers"
      description: "Returns the tag keys associated to the servers of the given account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/tags/values:
    post:
      tags:
      - "Servers"
      description: "Creates the tag values associated to the servers of the given\
        \ account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "TagsValueRequest"
        required: true
        schema:
          $ref: "#/definitions/TagsValueRequest"
        x-exportParamName: "TagsValueRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsValue"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}:
    get:
      tags:
      - "Servers"
      description: "Returns the specific server associated to the account"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ServerDetail"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    put:
      tags:
      - "Servers"
      description: "Updates the information related to the specific server of the\
        \ given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "ServerDetail"
        required: true
        schema:
          $ref: "#/definitions/ServerDetail"
        x-exportParamName: "ServerDetail"
      responses:
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}/backup:
    post:
      tags:
      - "Servers"
      description: "Backups the specific server associated to an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "ServerBackupRequest"
        required: true
        schema:
          $ref: "#/definitions/ServerBackupRequest"
        x-exportParamName: "ServerBackupRequest"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}/policies:
    get:
      tags:
      - "Servers"
      description: "Returns the policies attached to the specific server of an account"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ServerPolicy"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}/schedules:
    get:
      tags:
      - "Servers"
      description: "Returns the schedules attached to the specific server of an account"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Schedule"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}/start:
    post:
      tags:
      - "Servers"
      description: "Starts the specific server associated to an account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ServerDetail"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}/stats:
    get:
      tags:
      - "Servers"
      description: "Returns the statistics of the specific server associated to an\
        \ account"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ServerStat"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/servers/{server_id}/stop:
    post:
      tags:
      - "Servers"
      description: "Stops the specific server associated to the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ServerDetail"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Servers"
      consumes:
      - "application/json"
      parameters:
      - name: "server_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ServerId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/synchronization:
    post:
      tags:
      - "Synchronization"
      description: "Synchronizes the given account"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "empty"
        required: true
        schema:
          $ref: "#/definitions/empty"
        x-exportParamName: "Empty"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Synchronization"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Synchronization"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/synchronization/{synchronization_id}:
    get:
      tags:
      - "Synchronization"
      description: "Returns the specific synchronization detail of an account"
      produces:
      - "application/json"
      parameters:
      - name: "synchronization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SynchronizationId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Synchronization"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Synchronization"
      consumes:
      - "application/json"
      parameters:
      - name: "synchronization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SynchronizationId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/volumes:
    get:
      tags:
      - "Volumes"
      description: "Returns the volumes of the servers associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Volume"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Volumes"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/volumes/ids:
    get:
      tags:
      - "Volumes"
      description: "Returns the ids of the volumes associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/VolumeDetail"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Volumes"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/volumes/tags/keys:
    get:
      tags:
      - "Volumes"
      description: "Returns the tags keys of the volumes associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsKey"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Volumes"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/volumes/tags/values:
    post:
      tags:
      - "Volumes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "TagsValueRequest"
        required: true
        schema:
          $ref: "#/definitions/TagsValueRequest"
        x-exportParamName: "TagsValueRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TagsValue"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/empty"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Volumes"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/volumes/{volume_id}:
    get:
      tags:
      - "Volumes"
      description: "Returns the specific volume associated to an account"
      produces:
      - "application/json"
      parameters:
      - name: "volume_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/VolumeDetail"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Volumes"
      consumes:
      - "application/json"
      parameters:
      - name: "volume_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/accounts/{account_id}/weekly_savings:
    get:
      tags:
      - "Weekly Savings"
      description: "Returns the weekly savings of an account"
      produces:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/WeeklySaving"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Weekly Savings"
      consumes:
      - "application/json"
      parameters:
      - name: "account_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AccountId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/audits:
    get:
      tags:
      - "Audits"
      description: "Returns the audits of accounts associated to organization"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Audit"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Audits"
      consumes:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/audits/count:
    get:
      tags:
      - "Audits"
      description: "Returns the count of audits related to accounts of associated\
        \ organization"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Count"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Audits"
      consumes:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/members:
    get:
      tags:
      - "Members"
      description: "Returns the members of associated organization"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Member"
      security:
      - API_Authorizer: []
      - api_key: []
    post:
      tags:
      - "Members"
      description: "Creates the members of associated organization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Member"
        required: true
        schema:
          $ref: "#/definitions/Member"
        x-exportParamName: "Member"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Member"
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/Member"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Members"
      consumes:
      - "application/json"
      parameters:
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /organizations/{organization_id}/members/{member_id}:
    put:
      tags:
      - "Members"
      description: "Updates the specific member associated to an organization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "member_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MemberId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      - in: "body"
        name: "Member"
        required: true
        schema:
          $ref: "#/definitions/Member"
        x-exportParamName: "Member"
      responses:
        204:
          description: "204 response"
          schema:
            $ref: "#/definitions/Member"
      security:
      - API_Authorizer: []
      - api_key: []
    delete:
      tags:
      - "Members"
      description: "Deletes the specific member associated to an organization"
      parameters:
      - name: "member_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MemberId"
      - name: "organization_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        204:
          description: "204 response"
      security:
      - API_Authorizer: []
      - api_key: []
    options:
      tags:
      - "Members"
      consumes:
      - "application/json"
      parameters:
      - name: "member_id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MemberId"
      - name: "organization_id"
        in: "path"
        description: "Organization ID"
        required: true
        type: "string"
        x-exportParamName: "OrganizationId"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
  API_Authorizer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
definitions:
  Policy:
    type: "object"
    properties:
      id:
        type: "number"
      policy_id:
        type: "number"
      organization_id:
        type: "string"
      account_id:
        type: "string"
      timezone_location:
        type: "string"
      name:
        type: "string"
      create_summary:
        type: "string"
      delete_summary:
        type: "string"
      description:
        type: "string"
      backup_source:
        type: "string"
      backup_target:
        type: "string"
      inherit_tags:
        type: "string"
      perform_consistent_snapshots:
        type: "string"
      perform_reboot:
        type: "boolean"
      retention_amount:
        type: "number"
      retention_unit:
        type: "string"
      retention_in_hours:
        type: "number"
      retention_in_days:
        type: "string"
      never_delete:
        type: "string"
      create_cron:
        type: "string"
      backup_original_region_flag:
        type: "string"
      backup_second_region_flag:
        type: "string"
      backup_second_region:
        type: "string"
      backup_third_region_flag:
        type: "string"
      backup_third_region:
        type: "string"
      first_cross_account_flag:
        type: "string"
      first_cross_account_account_id:
        type: "string"
      first_cross_account_region:
        type: "string"
      is_active:
        type: "boolean"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      tag_with:
        type: "array"
        items:
          $ref: "#/definitions/empty"
      system_tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      objects:
        type: "array"
        items:
          $ref: "#/definitions/Policy_objects"
    title: "Policy"
    example:
      retention_in_days: "retention_in_days"
      objects:
      - type: "type"
        region: "region"
        object_id: "object_id"
      - type: "type"
        region: "region"
        object_id: "object_id"
      description: "description"
      created_at: "created_at"
      delete_summary: "delete_summary"
      retention_unit: "retention_unit"
      inherit_tags: "inherit_tags"
      updated_at: "updated_at"
      backup_second_region: "backup_second_region"
      system_tags:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      backup_original_region_flag: "backup_original_region_flag"
      create_summary: "create_summary"
      id: 0.8008281904610115
      backup_source: "backup_source"
      timezone_location: "timezone_location"
      perform_reboot: "perform_reboot"
      is_active: "is_active"
      backup_second_region_flag: "backup_second_region_flag"
      first_cross_account_region: "first_cross_account_region"
      retention_in_hours: 1.4658129805029452
      perform_consistent_snapshots: "perform_consistent_snapshots"
      backup_third_region_flag: "backup_third_region_flag"
      backup_third_region: "backup_third_region"
      deleted_at: "deleted_at"
      tags:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      tag_with:
      - {}
      - {}
      account_id: "account_id"
      organization_id: "organization_id"
      name: "name"
      never_delete: "never_delete"
      backup_target: "backup_target"
      retention_amount: 6.027456183070403
      create_cron: "create_cron"
      first_cross_account_flag: "first_cross_account_flag"
      first_cross_account_account_id: "first_cross_account_account_id"
  Account:
    type: "object"
    properties:
      id:
        type: "string"
      organization_id:
        type: "string"
      name:
        type: "string"
      initials:
        type: "string"
      color:
        type: "string"
      avatar_image:
        type: "string"
      type:
        type: "string"
      default_timezone_location:
        type: "string"
      is_active:
        type: "boolean"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
      settings:
        $ref: "#/definitions/Setting"
      credential:
        $ref: "#/definitions/Credential"
      members:
        $ref: "#/definitions/Member"
    title: "Account"
    example:
      settings:
        account_id: "account_id"
        send_failure_notifications: "send_failure_notifications"
        send_warning_notifications: "send_warning_notifications"
        updated_at: "updated_at"
        server_recipients_json: "server_recipients_json"
        send_server_notifications: "send_server_notifications"
        send_backup_notifications: "send_backup_notifications"
        created_at: "created_at"
        backup_recipients_json: "backup_recipients_json"
        failure_recipients_json: "failure_recipients_json"
        warning_recipients_json: "warning_recipients_json"
      is_active: "is_active"
      color: "color"
      initials: "initials"
      default_timezone_location: "default_timezone_location"
      created_at: "created_at"
      avatar_image: "avatar_image"
      type: "type"
      deleted_at: "deleted_at"
      updated_at: "updated_at"
      credential:
        state_reason: "state_reason"
        account_id: "account_id"
        updated_at: "updated_at"
        access_role_arn: "access_role_arn"
        cloudformation_s3_url: "cloudformation_s3_url"
        created_at: "created_at"
        external_id: "external_id"
        state: "state"
      organization_id: "organization_id"
      members:
        updated_at: "updated_at"
        organization_id: "organization_id"
        invited_at: "invited_at"
        last_name: "last_name"
        created_at: "created_at"
        id: 6
        first_name: "first_name"
        email: "email"
        account_access: "account_access"
        status: "status"
      name: "name"
      id: "id"
  SSHKey:
    type: "object"
    properties:
      KeyPairs:
        type: "array"
        items:
          $ref: "#/definitions/SSHKey_KeyPairs"
    title: "SSHKey"
    example:
      KeyPairs:
      - KeyName: "KeyName"
        KeyFingerprint: "KeyFingerprint"
      - KeyName: "KeyName"
        KeyFingerprint: "KeyFingerprint"
  CredentialsRequest:
    type: "object"
    properties:
      access_role_arn:
        type: "string"
    title: "CredentialsRequest"
    example:
      access_role_arn: "access_role_arn"
  BackupsCount:
    type: "object"
    properties:
      count:
        type: "string"
      _shards:
        $ref: "#/definitions/BackupsCount__shards"
    title: "BackupsCount"
    example:
      _shards:
        total: 0.8008281904610115
        failed: 1.4658129805029452
        successful: 6.027456183070403
      count: "count"
  Server:
    type: "object"
    properties:
      server_id:
        type: "string"
      type:
        type: "string"
      region:
        type: "string"
    title: "Server"
    example:
      server_id: "server_id"
      type: "type"
      region: "region"
  CountTag:
    type: "object"
    properties:
      totalCount:
        type: "string"
      alreadyGoneCount:
        type: "string"
    title: "CountTag"
    example:
      alreadyGoneCount: "alreadyGoneCount"
      totalCount: "totalCount"
  Token:
    type: "object"
    properties:
      token:
        type: "string"
    title: "Token"
    example:
      token: "token"
  AmiRestoreRequest:
    type: "object"
    properties:
      instance_type:
        type: "string"
      restore_tags:
        type: "array"
        items:
          $ref: "#/definitions/AmiRestoreRequest_restore_tags"
    title: "AmiRestoreRequest"
    example:
      restore_tags:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
      instance_type: "instance_type"
  Count:
    type: "object"
    properties:
      count:
        type: "integer"
    title: "Count"
    example:
      count: 0
  InstanceDetail:
    type: "object"
    properties:
      InstanceId:
        type: "string"
      Type:
        type: "string"
      Region:
        type: "string"
    title: "InstanceDetails"
    example:
      Type: "Type"
      InstanceId: "InstanceId"
      Region: "Region"
  ScheduleAverage:
    type: "object"
    properties:
      Monday:
        type: "string"
      Tuesday:
        type: "string"
      Wednesday:
        type: "string"
      Thursday:
        type: "string"
      Friday:
        type: "string"
      Saturday:
        type: "string"
      Sunday:
        type: "string"
    title: "ScheduleAverage"
    example:
      Monday: "Monday"
      Thursday: "Thursday"
      Friday: "Friday"
      Sunday: "Sunday"
      Wednesday: "Wednesday"
      Tuesday: "Tuesday"
      Saturday: "Saturday"
  empty: {}
  TagsKey:
    type: "object"
    properties:
      values:
        type: "array"
        items:
          type: "string"
    title: "TagsKey"
    example:
      values:
      - "values"
      - "values"
  BackupDetailOne:
    type: "object"
    properties:
      Description:
        type: "string"
      Encrypted:
        type: "string"
      OwnerId:
        type: "string"
      Progress:
        type: "string"
      SnapshotId:
        type: "string"
      StartTime:
        type: "string"
      State:
        type: "string"
      VolumeId:
        type: "string"
      VolumeSize:
        type: "string"
      Tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      __OrganizationId:
        type: "string"
      __AccountId:
        type: "string"
      postDate:
        type: "string"
      Region:
        type: "string"
      Type:
        type: "string"
      Source:
        type: "string"
      ObjectType:
        type: "string"
      BackupTime:
        type: "string"
      Id:
        type: "string"
    title: "BackupDetailOne"
    example:
      Progress: "Progress"
      Description: "Description"
      __AccountId: "__AccountId"
      Encrypted: "Encrypted"
      StartTime: "StartTime"
      BackupTime: "BackupTime"
      Source: "Source"
      SnapshotId: "SnapshotId"
      ObjectType: "ObjectType"
      VolumeId: "VolumeId"
      Type: "Type"
      OwnerId: "OwnerId"
      State: "State"
      postDate: "postDate"
      Region: "Region"
      Id: "Id"
      _id: "_id"
      VolumeSize: "VolumeSize"
      __OrganizationId: "__OrganizationId"
      Tags:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
  OrganizationAccountCreate:
    type: "object"
    properties:
      name:
        type: "string"
    title: "OrganizationAccountCreate"
    example:
      name: "name"
  Job:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      eventType:
        type: "string"
      object_id:
        type: "number"
      cron:
        type: "string"
      totalTasks:
        type: "number"
      totalSuccess:
        type: "number"
      totalFail:
        type: "number"
      date:
        type: "string"
      event_at:
        type: "string"
      seq:
        type: "number"
      tasks:
        type: "array"
        items:
          $ref: "#/definitions/JobTask"
    title: "Job"
    example:
      cron: "cron"
      date: "date"
      totalFail: 5.962133916683182
      totalSuccess: 1.4658129805029452
      id: "id"
      eventType: "eventType"
      totalTasks: 6.027456183070403
      event_at: "event_at"
      type: "type"
      object_id: 0.8008281904610115
      seq: 5.637376656633329
      tasks:
      - updated_at: "updated_at"
        job_id: "job_id"
        resource_type: "resource_type"
        resource_id: "resource_id"
        action: "action"
        created_at: "created_at"
        id: "id"
        region: "region"
        resource_name: "resource_name"
        is_success: "is_success"
        logs:
        - {}
        - {}
        steps:
        - status_message: "status_message"
          depends_on_id: "depends_on_id"
          status_code: "status_code"
          data: "data"
          finished_at: "finished_at"
          depends_on_result: "depends_on_result"
          target_account_id: "target_account_id"
          resource_type: "resource_type"
          created_at: 9.301444243932576
          resource_source: "resource_source"
          is_success: "is_success"
          last_checked_at: "last_checked_at"
          updated_at: 3.616076749251911
          job_id: "job_id"
          job_task_id: "job_task_id"
          resource_id: "resource_id"
          started_at: "started_at"
          step: "step"
          id: "id"
          region: "region"
          resource_name: "resource_name"
          seq: 2.3021358869347655
          attempts: 7.061401241503109
        - status_message: "status_message"
          depends_on_id: "depends_on_id"
          status_code: "status_code"
          data: "data"
          finished_at: "finished_at"
          depends_on_result: "depends_on_result"
          target_account_id: "target_account_id"
          resource_type: "resource_type"
          created_at: 9.301444243932576
          resource_source: "resource_source"
          is_success: "is_success"
          last_checked_at: "last_checked_at"
          updated_at: 3.616076749251911
          job_id: "job_id"
          job_task_id: "job_task_id"
          resource_id: "resource_id"
          started_at: "started_at"
          step: "step"
          id: "id"
          region: "region"
          resource_name: "resource_name"
          seq: 2.3021358869347655
          attempts: 7.061401241503109
      - updated_at: "updated_at"
        job_id: "job_id"
        resource_type: "resource_type"
        resource_id: "resource_id"
        action: "action"
        created_at: "created_at"
        id: "id"
        region: "region"
        resource_name: "resource_name"
        is_success: "is_success"
        logs:
        - {}
        - {}
        steps:
        - status_message: "status_message"
          depends_on_id: "depends_on_id"
          status_code: "status_code"
          data: "data"
          finished_at: "finished_at"
          depends_on_result: "depends_on_result"
          target_account_id: "target_account_id"
          resource_type: "resource_type"
          created_at: 9.301444243932576
          resource_source: "resource_source"
          is_success: "is_success"
          last_checked_at: "last_checked_at"
          updated_at: 3.616076749251911
          job_id: "job_id"
          job_task_id: "job_task_id"
          resource_id: "resource_id"
          started_at: "started_at"
          step: "step"
          id: "id"
          region: "region"
          resource_name: "resource_name"
          seq: 2.3021358869347655
          attempts: 7.061401241503109
        - status_message: "status_message"
          depends_on_id: "depends_on_id"
          status_code: "status_code"
          data: "data"
          finished_at: "finished_at"
          depends_on_result: "depends_on_result"
          target_account_id: "target_account_id"
          resource_type: "resource_type"
          created_at: 9.301444243932576
          resource_source: "resource_source"
          is_success: "is_success"
          last_checked_at: "last_checked_at"
          updated_at: 3.616076749251911
          job_id: "job_id"
          job_task_id: "job_task_id"
          resource_id: "resource_id"
          started_at: "started_at"
          step: "step"
          id: "id"
          region: "region"
          resource_name: "resource_name"
          seq: 2.3021358869347655
          attempts: 7.061401241503109
  Member:
    type: "object"
    properties:
      id:
        type: "integer"
      organization_id:
        type: "string"
      account_access:
        type: "string"
      email:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      status:
        type: "string"
      invited_at:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
    title: "Member"
    example:
      updated_at: "updated_at"
      organization_id: "organization_id"
      invited_at: "invited_at"
      last_name: "last_name"
      created_at: "created_at"
      id: 6
      first_name: "first_name"
      email: "email"
      account_access: "account_access"
      status: "status"
  JobTaskStep:
    type: "object"
    properties:
      id:
        type: "string"
      job_task_id:
        type: "string"
      job_id:
        type: "string"
      depends_on_id:
        type: "string"
      depends_on_result:
        type: "string"
      seq:
        type: "number"
      step:
        type: "string"
      region:
        type: "string"
      target_account_id:
        type: "string"
      resource_id:
        type: "string"
      resource_name:
        type: "string"
      resource_type:
        type: "string"
      resource_source:
        type: "string"
      data:
        type: "string"
      is_success:
        type: "string"
      status_message:
        type: "string"
      status_code:
        type: "string"
      started_at:
        type: "string"
      last_checked_at:
        type: "string"
      finished_at:
        type: "string"
      attempts:
        type: "number"
      created_at:
        type: "number"
      updated_at:
        type: "number"
    title: "JobTaskStep"
    example:
      status_message: "status_message"
      depends_on_id: "depends_on_id"
      status_code: "status_code"
      data: "data"
      finished_at: "finished_at"
      depends_on_result: "depends_on_result"
      target_account_id: "target_account_id"
      resource_type: "resource_type"
      created_at: 9.301444243932576
      resource_source: "resource_source"
      is_success: "is_success"
      last_checked_at: "last_checked_at"
      updated_at: 3.616076749251911
      job_id: "job_id"
      job_task_id: "job_task_id"
      resource_id: "resource_id"
      started_at: "started_at"
      step: "step"
      id: "id"
      region: "region"
      resource_name: "resource_name"
      seq: 2.3021358869347655
      attempts: 7.061401241503109
  Setting:
    type: "object"
    properties:
      account_id:
        type: "string"
      send_backup_notifications:
        type: "boolean"
      send_server_notifications:
        type: "boolean"
      send_failure_notifications:
        type: "boolean"
      send_warning_notifications:
        type: "boolean"
      backup_recipients_json:
        type: "string"
      server_recipients_json:
        type: "string"
      failure_recipients_json:
        type: "string"
      warning_recipients_json:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
    title: "Setting"
    example:
      account_id: "account_id"
      send_failure_notifications: "send_failure_notifications"
      send_warning_notifications: "send_warning_notifications"
      updated_at: "updated_at"
      server_recipients_json: "server_recipients_json"
      send_server_notifications: "send_server_notifications"
      send_backup_notifications: "send_backup_notifications"
      created_at: "created_at"
      backup_recipients_json: "backup_recipients_json"
      failure_recipients_json: "failure_recipients_json"
      warning_recipients_json: "warning_recipients_json"
  ServerDetail:
    type: "object"
    properties:
      AmiLaunchIndex:
        type: "number"
      ImageId:
        type: "string"
      InstanceId:
        type: "string"
      InstanceType:
        type: "string"
      KeyName:
        type: "string"
      LaunchTime:
        type: "string"
      Monitoring:
        $ref: "#/definitions/ServerDetail_Monitoring"
      Placement:
        $ref: "#/definitions/ServerDetail_Placement"
      PrivateDnsName:
        type: "string"
      PrivateIpAddress:
        type: "string"
      ProductCodes:
        type: "array"
        items:
          $ref: "#/definitions/empty"
      PublicDnsName:
        type: "string"
      State:
        $ref: "#/definitions/ServerDetail_State"
      StateTransitionReason:
        type: "string"
      SubnetId:
        type: "string"
      VpcId:
        type: "string"
      Architecture:
        type: "string"
      BlockDeviceMappings:
        type: "array"
        items:
          $ref: "#/definitions/ServerDetail_BlockDeviceMappings"
      ClientToken:
        type: "string"
      EbsOptimized:
        type: "string"
      EnaSupport:
        type: "string"
      Hypervisor:
        type: "string"
      ElasticGpuAssociations:
        type: "array"
        items:
          $ref: "#/definitions/empty"
      NetworkInterfaces:
        type: "array"
        items:
          $ref: "#/definitions/ServerDetail_NetworkInterfaces"
      RootDeviceName:
        type: "string"
      RootDeviceType:
        type: "string"
      SecurityGroups:
        type: "array"
        items:
          $ref: "#/definitions/ServerDetail_Groups"
      SourceDestCheck:
        type: "string"
      StateReason:
        $ref: "#/definitions/ServerDetail_StateReason"
      Tags:
        $ref: "#/definitions/Tag"
      VirtualizationType:
        type: "string"
      __OrganizationId:
        type: "string"
      __AccountId:
        type: "string"
      postDate:
        type: "string"
      Region:
        type: "string"
      Type:
        type: "string"
      Id:
        type: "string"
      Name:
        type: "string"
      Volumes:
        $ref: "#/definitions/Volume"
    example:
      SecurityGroups:
      - GroupName: "GroupName"
        GroupId: "GroupId"
      - GroupName: "GroupName"
        GroupId: "GroupId"
      PrivateDnsName: "PrivateDnsName"
      PrivateIpAddress: "PrivateIpAddress"
      RootDeviceName: "RootDeviceName"
      __AccountId: "__AccountId"
      EnaSupport: "EnaSupport"
      BlockDeviceMappings:
      - Ebs:
          Status: "Status"
          VolumeId: "VolumeId"
          AttachTime: "AttachTime"
          DeleteOnTermination: "DeleteOnTermination"
        DeviceName: "DeviceName"
      - Ebs:
          Status: "Status"
          VolumeId: "VolumeId"
          AttachTime: "AttachTime"
          DeleteOnTermination: "DeleteOnTermination"
        DeviceName: "DeviceName"
      SubnetId: "SubnetId"
      EbsOptimized: "EbsOptimized"
      Name: "Name"
      Volumes:
        __AccountId: "__AccountId"
        Encrypted: "Encrypted"
        Size: 6.027456183070403
        CreateTime: "CreateTime"
        AvailabilityZone: "AvailabilityZone"
        Iops: 1.4658129805029452
        Attachments:
        - VolumeId: "VolumeId"
          InstanceId: "InstanceId"
          Device: "Device"
          State: "State"
          AttachTime: "AttachTime"
          DeleteOnTermination: "DeleteOnTermination"
        - VolumeId: "VolumeId"
          InstanceId: "InstanceId"
          Device: "Device"
          State: "State"
          AttachTime: "AttachTime"
          DeleteOnTermination: "DeleteOnTermination"
        Source: "Source"
        SnapshotId: "SnapshotId"
        ObjectType: "ObjectType"
        VolumeId: "VolumeId"
        Type: "Type"
        VolumeType: "VolumeType"
        State: "State"
        postDate: "postDate"
        Region: "Region"
        Id: "Id"
        __OrganizationId: "__OrganizationId"
        Tags:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
      Placement:
        GroupName: "GroupName"
        Tenancy: "Tenancy"
        AvailabilityZone: "AvailabilityZone"
      NetworkInterfaces:
      - Status: "Status"
        Description: "Description"
        PrivateDnsName: "PrivateDnsName"
        PrivateIpAddress: "PrivateIpAddress"
        PrivateIpAddresses:
        - PrivateDnsName: "PrivateDnsName"
          PrivateIpAddress: "PrivateIpAddress"
          Primary: "Primary"
        - PrivateDnsName: "PrivateDnsName"
          PrivateIpAddress: "PrivateIpAddress"
          Primary: "Primary"
        Attachment:
          Attachment:
            Status: "Status"
            DeviceIndex: "DeviceIndex"
            AttachmentId: "AttachmentId"
            AttachTime: "AttachTime"
            DeleteOnTermination: "DeleteOnTermination"
        Ipv6Addresses:
        - null
        - null
        SubnetId: "SubnetId"
        MacAddress: "MacAddress"
        NetworkInterfaceId: "NetworkInterfaceId"
        SourceDestCheck: "SourceDestCheck"
        OwnerId: "OwnerId"
        VpcId: "VpcId"
        Groups:
        - GroupName: "GroupName"
          GroupId: "GroupId"
        - GroupName: "GroupName"
          GroupId: "GroupId"
      - Status: "Status"
        Description: "Description"
        PrivateDnsName: "PrivateDnsName"
        PrivateIpAddress: "PrivateIpAddress"
        PrivateIpAddresses:
        - PrivateDnsName: "PrivateDnsName"
          PrivateIpAddress: "PrivateIpAddress"
          Primary: "Primary"
        - PrivateDnsName: "PrivateDnsName"
          PrivateIpAddress: "PrivateIpAddress"
          Primary: "Primary"
        Attachment:
          Attachment:
            Status: "Status"
            DeviceIndex: "DeviceIndex"
            AttachmentId: "AttachmentId"
            AttachTime: "AttachTime"
            DeleteOnTermination: "DeleteOnTermination"
        Ipv6Addresses:
        - null
        - null
        SubnetId: "SubnetId"
        MacAddress: "MacAddress"
        NetworkInterfaceId: "NetworkInterfaceId"
        SourceDestCheck: "SourceDestCheck"
        OwnerId: "OwnerId"
        VpcId: "VpcId"
        Groups:
        - GroupName: "GroupName"
          GroupId: "GroupId"
        - GroupName: "GroupName"
          GroupId: "GroupId"
      ImageId: "ImageId"
      InstanceType: "InstanceType"
      Monitoring:
        State: "State"
      Tags:
        value: "value"
        key: "key"
      ProductCodes:
      - {}
      - {}
      LaunchTime: "LaunchTime"
      Architecture: "Architecture"
      InstanceId: "InstanceId"
      Hypervisor: "Hypervisor"
      VirtualizationType: "VirtualizationType"
      ElasticGpuAssociations:
      - null
      - null
      PublicDnsName: "PublicDnsName"
      KeyName: "KeyName"
      RootDeviceType: "RootDeviceType"
      SourceDestCheck: "SourceDestCheck"
      AmiLaunchIndex: 0.8008281904610115
      Type: "Type"
      VpcId: "VpcId"
      State:
        Code: "Code"
        Name: "Name"
      StateReason:
        Message: "Message"
        Code: "Code"
      postDate: "postDate"
      Region: "Region"
      StateTransitionReason: "StateTransitionReason"
      Id: "Id"
      ClientToken: "ClientToken"
      __OrganizationId: "__OrganizationId"
  ServerStat:
    type: "object"
    properties:
      weekly_savings:
        type: "number"
      hourly_cost:
        type: "number"
      ami_count:
        type: "number"
      snapshot_count:
        type: "number"
    title: "ServerStat"
    example:
      snapshot_count: 5.962133916683182
      weekly_savings: 0.8008281904610115
      hourly_cost: 6.027456183070403
      ami_count: 1.4658129805029452
  ImportBackupRequest:
    type: "object"
    properties:
      tag:
        type: "array"
        items:
          $ref: "#/definitions/AmiRestoreRequest_restore_tags"
    title: "ImportBackupRequest"
    example:
      tag:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
  JobSearchRequest:
    type: "object"
    properties:
      Tags:
        type: "array"
        items:
          $ref: "#/definitions/AmiRestoreRequest_restore_tags"
      Keywords:
        type: "array"
        items:
          type: "string"
    title: "JobSearchRequest"
    example:
      Keywords:
      - "Keywords"
      - "Keywords"
      Tags:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
  AccountServerRequest:
    type: "object"
    properties:
      Tags:
        $ref: "#/definitions/Tag"
      Keywords:
        type: "array"
        items:
          type: "string"
    title: "AccountServerRequest"
    example:
      Keywords:
      - "Keywords"
      - "Keywords"
      Tags:
        value: "value"
        key: "key"
  AccountServer:
    type: "object"
    properties:
      total:
        type: "number"
      max_score:
        type: "number"
      hits:
        type: "array"
        items:
          $ref: "#/definitions/AccountServer_hits"
    title: "AccountServer"
    example:
      hits:
      - Schedules:
          is_active: "is_active"
          description: "description"
          created_at: "created_at"
          schedule_json: "schedule_json"
          deleted_at: "deleted_at"
          tags:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          servers:
          - server_id: "server_id"
            type: "type"
            region: "region"
          - server_id: "server_id"
            type: "type"
            region: "region"
          percent_on: 6.027456183070403
          updated_at: "updated_at"
          organization_id: "organization_id"
          name: "name"
          id: 0.8008281904610115
          hours_on: 1.4658129805029452
          timezone_location: "timezone_location"
        Type: "Type"
        TagCount: 1.4658129805029452
        Policies:
          retention_in_days: "retention_in_days"
          objects:
          - type: "type"
            region: "region"
            object_id: "object_id"
          - type: "type"
            region: "region"
            object_id: "object_id"
          description: "description"
          created_at: "created_at"
          delete_summary: "delete_summary"
          retention_unit: "retention_unit"
          inherit_tags: "inherit_tags"
          updated_at: "updated_at"
          backup_second_region: "backup_second_region"
          system_tags:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          backup_original_region_flag: "backup_original_region_flag"
          create_summary: "create_summary"
          id: 0.8008281904610115
          backup_source: "backup_source"
          timezone_location: "timezone_location"
          perform_reboot: "perform_reboot"
          is_active: "is_active"
          backup_second_region_flag: "backup_second_region_flag"
          first_cross_account_region: "first_cross_account_region"
          retention_in_hours: 1.4658129805029452
          perform_consistent_snapshots: "perform_consistent_snapshots"
          backup_third_region_flag: "backup_third_region_flag"
          backup_third_region: "backup_third_region"
          deleted_at: "deleted_at"
          tags:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          tag_with:
          - {}
          - {}
          account_id: "account_id"
          organization_id: "organization_id"
          name: "name"
          never_delete: "never_delete"
          backup_target: "backup_target"
          retention_amount: 6.027456183070403
          create_cron: "create_cron"
          first_cross_account_flag: "first_cross_account_flag"
          first_cross_account_account_id: "first_cross_account_account_id"
        InstanceId: "InstanceId"
        State:
          Name: "Name"
        Region: "Region"
        AvailabilityZone: "AvailabilityZone"
        InstanceType: "InstanceType"
        Tags:
          value: "value"
          key: "key"
        Name: "Name"
      - Schedules:
          is_active: "is_active"
          description: "description"
          created_at: "created_at"
          schedule_json: "schedule_json"
          deleted_at: "deleted_at"
          tags:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          servers:
          - server_id: "server_id"
            type: "type"
            region: "region"
          - server_id: "server_id"
            type: "type"
            region: "region"
          percent_on: 6.027456183070403
          updated_at: "updated_at"
          organization_id: "organization_id"
          name: "name"
          id: 0.8008281904610115
          hours_on: 1.4658129805029452
          timezone_location: "timezone_location"
        Type: "Type"
        TagCount: 1.4658129805029452
        Policies:
          retention_in_days: "retention_in_days"
          objects:
          - type: "type"
            region: "region"
            object_id: "object_id"
          - type: "type"
            region: "region"
            object_id: "object_id"
          description: "description"
          created_at: "created_at"
          delete_summary: "delete_summary"
          retention_unit: "retention_unit"
          inherit_tags: "inherit_tags"
          updated_at: "updated_at"
          backup_second_region: "backup_second_region"
          system_tags:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          backup_original_region_flag: "backup_original_region_flag"
          create_summary: "create_summary"
          id: 0.8008281904610115
          backup_source: "backup_source"
          timezone_location: "timezone_location"
          perform_reboot: "perform_reboot"
          is_active: "is_active"
          backup_second_region_flag: "backup_second_region_flag"
          first_cross_account_region: "first_cross_account_region"
          retention_in_hours: 1.4658129805029452
          perform_consistent_snapshots: "perform_consistent_snapshots"
          backup_third_region_flag: "backup_third_region_flag"
          backup_third_region: "backup_third_region"
          deleted_at: "deleted_at"
          tags:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          tag_with:
          - {}
          - {}
          account_id: "account_id"
          organization_id: "organization_id"
          name: "name"
          never_delete: "never_delete"
          backup_target: "backup_target"
          retention_amount: 6.027456183070403
          create_cron: "create_cron"
          first_cross_account_flag: "first_cross_account_flag"
          first_cross_account_account_id: "first_cross_account_account_id"
        InstanceId: "InstanceId"
        State:
          Name: "Name"
        Region: "Region"
        AvailabilityZone: "AvailabilityZone"
        InstanceType: "InstanceType"
        Tags:
          value: "value"
          key: "key"
        Name: "Name"
      total: 0.8008281904610115
      max_score: 6.027456183070403
  ScheduleTime:
    type: "object"
    properties:
      day:
        type: "string"
      start_hour:
        type: "string"
      stop_hour:
        type: "string"
      start_cron:
        type: "string"
      stop_cron:
        type: "string"
    title: "ScheduleTime"
    example:
      stop_hour: "stop_hour"
      start_hour: "start_hour"
      stop_cron: "stop_cron"
      day: "day"
      start_cron: "start_cron"
  Volume:
    type: "object"
    properties:
      Attachments:
        type: "array"
        items:
          $ref: "#/definitions/Volume_Attachments"
      AvailabilityZone:
        type: "string"
      CreateTime:
        type: "string"
      Encrypted:
        type: "string"
      Size:
        type: "number"
      SnapshotId:
        type: "string"
      State:
        type: "string"
      VolumeId:
        type: "string"
      Iops:
        type: "number"
      Tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      VolumeType:
        type: "string"
      __OrganizationId:
        type: "string"
      __AccountId:
        type: "string"
      postDate:
        type: "string"
      Region:
        type: "string"
      Type:
        type: "string"
      Source:
        type: "string"
      ObjectType:
        type: "string"
      Id:
        type: "string"
    title: "Volume"
    example:
      __AccountId: "__AccountId"
      Encrypted: "Encrypted"
      Size: 6.027456183070403
      CreateTime: "CreateTime"
      AvailabilityZone: "AvailabilityZone"
      Iops: 1.4658129805029452
      Attachments:
      - VolumeId: "VolumeId"
        InstanceId: "InstanceId"
        Device: "Device"
        State: "State"
        AttachTime: "AttachTime"
        DeleteOnTermination: "DeleteOnTermination"
      - VolumeId: "VolumeId"
        InstanceId: "InstanceId"
        Device: "Device"
        State: "State"
        AttachTime: "AttachTime"
        DeleteOnTermination: "DeleteOnTermination"
      Source: "Source"
      SnapshotId: "SnapshotId"
      ObjectType: "ObjectType"
      VolumeId: "VolumeId"
      Type: "Type"
      VolumeType: "VolumeType"
      State: "State"
      postDate: "postDate"
      Region: "Region"
      Id: "Id"
      __OrganizationId: "__OrganizationId"
      Tags:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
  VolumeDetail:
    type: "object"
    properties:
      VolumeId:
        type: "string"
      Type:
        type: "string"
      Region:
        type: "string"
    title: "VolumeDetail"
    example:
      VolumeId: "VolumeId"
      Type: "Type"
      Region: "Region"
  PolicyObject:
    type: "object"
    properties:
      object_id:
        type: "string"
      type:
        type: "string"
      region:
        type: "string"
    title: "PolicyObject"
    example:
      type: "type"
      region: "region"
      object_id: "object_id"
  ServerPolicy:
    type: "object"
    properties:
      id:
        type: "number"
      organization_id:
        type: "string"
      account_id:
        type: "string"
      timezone_location:
        type: "string"
      name:
        type: "string"
      create_summary:
        type: "string"
      delete_summary:
        type: "string"
      description:
        type: "string"
      backup_source:
        type: "string"
      backup_target:
        type: "string"
      inherit_tags:
        type: "string"
      perform_consistent_snapshots:
        type: "string"
      perform_reboot:
        type: "string"
      retention_amount:
        type: "number"
      retention_unit:
        type: "string"
      retention_in_hours:
        type: "number"
      retention_in_days:
        type: "string"
      never_delete:
        type: "string"
      create_cron:
        type: "string"
      backup_original_region_flag:
        type: "string"
      backup_second_region_flag:
        type: "string"
      backup_second_region:
        type: "string"
      backup_third_region_flag:
        type: "string"
      backup_third_region:
        type: "string"
      first_cross_account_flag:
        type: "string"
      first_cross_account_account_id:
        type: "string"
      first_cross_account_region:
        type: "string"
      is_active:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    title: "ServerPolicy"
    example:
      retention_in_days: "retention_in_days"
      description: "description"
      created_at: "created_at"
      delete_summary: "delete_summary"
      retention_unit: "retention_unit"
      inherit_tags: "inherit_tags"
      updated_at: "updated_at"
      backup_second_region: "backup_second_region"
      backup_original_region_flag: "backup_original_region_flag"
      create_summary: "create_summary"
      id: 0.8008281904610115
      backup_source: "backup_source"
      timezone_location: "timezone_location"
      perform_reboot: "perform_reboot"
      is_active: "is_active"
      backup_second_region_flag: "backup_second_region_flag"
      first_cross_account_region: "first_cross_account_region"
      retention_in_hours: 1.4658129805029452
      perform_consistent_snapshots: "perform_consistent_snapshots"
      backup_third_region_flag: "backup_third_region_flag"
      backup_third_region: "backup_third_region"
      deleted_at: "deleted_at"
      tags:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      account_id: "account_id"
      organization_id: "organization_id"
      name: "name"
      never_delete: "never_delete"
      backup_target: "backup_target"
      retention_amount: 6.027456183070403
      create_cron: "create_cron"
      first_cross_account_flag: "first_cross_account_flag"
      first_cross_account_account_id: "first_cross_account_account_id"
  TagsValue:
    type: "object"
    properties:
      values:
        type: "array"
        items:
          type: "string"
    title: "TagsValue"
    example:
      values:
      - "values"
      - "values"
  Region:
    type: "object"
    properties:
      Endpoint:
        type: "string"
      RegionName:
        type: "string"
    title: "Region"
    example:
      Endpoint: "Endpoint"
      RegionName: "RegionName"
  TagsValueRequest:
    type: "object"
    properties:
      tagKey:
        type: "string"
    title: "TagsValueRequest"
    example:
      tagKey: "tagKey"
  PolicyCloneResponse:
    type: "object"
    properties:
      id:
        type: "number"
      policy_id:
        type: "number"
      key:
        type: "string"
      value:
        type: "number"
      account_id:
        type: "string"
      organization_id:
        type: "string"
    title: "PolicyCloneResponse"
    example:
      account_id: "account_id"
      policy_id: 6.027456183070403
      organization_id: "organization_id"
      id: 0.8008281904610115
      value: 1.4658129805029452
      key: "key"
  AccountMemberRequest:
    type: "object"
    properties:
      email:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
    example:
      last_name: "last_name"
      first_name: "first_name"
      email: "email"
  VolumeRestore:
    type: "object"
    properties:
      availabilityZone:
        type: "string"
      volumeName:
        type: "string"
    title: "VolumeRestore"
    example:
      volumeName: "volumeName"
      availabilityZone: "availabilityZone"
  JobTask:
    type: "object"
    properties:
      id:
        type: "string"
      job_id:
        type: "string"
      region:
        type: "string"
      resource_type:
        type: "string"
      resource_id:
        type: "string"
      resource_name:
        type: "string"
      action:
        type: "string"
      is_success:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      logs:
        type: "array"
        items:
          $ref: "#/definitions/empty"
      steps:
        type: "array"
        items:
          $ref: "#/definitions/JobTaskStep"
    title: "JobTask"
    example:
      updated_at: "updated_at"
      job_id: "job_id"
      resource_type: "resource_type"
      resource_id: "resource_id"
      action: "action"
      created_at: "created_at"
      id: "id"
      region: "region"
      resource_name: "resource_name"
      is_success: "is_success"
      logs:
      - {}
      - {}
      steps:
      - status_message: "status_message"
        depends_on_id: "depends_on_id"
        status_code: "status_code"
        data: "data"
        finished_at: "finished_at"
        depends_on_result: "depends_on_result"
        target_account_id: "target_account_id"
        resource_type: "resource_type"
        created_at: 9.301444243932576
        resource_source: "resource_source"
        is_success: "is_success"
        last_checked_at: "last_checked_at"
        updated_at: 3.616076749251911
        job_id: "job_id"
        job_task_id: "job_task_id"
        resource_id: "resource_id"
        started_at: "started_at"
        step: "step"
        id: "id"
        region: "region"
        resource_name: "resource_name"
        seq: 2.3021358869347655
        attempts: 7.061401241503109
      - status_message: "status_message"
        depends_on_id: "depends_on_id"
        status_code: "status_code"
        data: "data"
        finished_at: "finished_at"
        depends_on_result: "depends_on_result"
        target_account_id: "target_account_id"
        resource_type: "resource_type"
        created_at: 9.301444243932576
        resource_source: "resource_source"
        is_success: "is_success"
        last_checked_at: "last_checked_at"
        updated_at: 3.616076749251911
        job_id: "job_id"
        job_task_id: "job_task_id"
        resource_id: "resource_id"
        started_at: "started_at"
        step: "step"
        id: "id"
        region: "region"
        resource_name: "resource_name"
        seq: 2.3021358869347655
        attempts: 7.061401241503109
  Organization:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      avatar_url:
        type: "string"
      principal_email:
        type: "string"
      has_principal_logged_in:
        type: "string"
      is_active:
        type: "string"
      recurly_account_id:
        type: "string"
      billing_id:
        type: "integer"
      current_spend:
        type: "string"
      is_trial:
        type: "string"
      trial_expires_at:
        type: "string"
      subscription_expires_at:
        type: "string"
      subscription_began_at:
        type: "string"
      aws_marketplace_customer_id:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      members:
        type: "array"
        items:
          $ref: "#/definitions/Member"
      billing:
        $ref: "#/definitions/Organization_billing"
      overrides:
        type: "string"
    title: "Organization"
    example:
      is_active: "is_active"
      aws_marketplace_customer_id: "aws_marketplace_customer_id"
      billing_id: 0
      subscription_began_at: "subscription_began_at"
      created_at: "created_at"
      has_principal_logged_in: "has_principal_logged_in"
      overrides: "overrides"
      principal_email: "principal_email"
      trial_expires_at: "trial_expires_at"
      billing:
        cross_account_backups: "cross_account_backups"
        file_level_restore_enabled: "file_level_restore_enabled"
        max_savings: 4
        max_spend: 5
        reporting_enabled: "reporting_enabled"
        auditing_enabled: "auditing_enabled"
        max_managed_servers: 9
        slack_enabled: "slack_enabled"
        consistent_backups_enabled: "consistent_backups_enabled"
        max_users: 2
        recurly_plan_id: "recurly_plan_id"
        sso_enabled: "sso_enabled"
        price: 5
        cross_region_backups: "cross_region_backups"
        name: "name"
        max_schedules: 3
        phone_support_enabled: "phone_support_enabled"
        interval: "interval"
        max_accounts: 7
        id: 1
        is_current: "is_current"
        category: "category"
        max_policies: 2
        webhooks_enabled: "webhooks_enabled"
      subscription_expires_at: "subscription_expires_at"
      avatar_url: "avatar_url"
      updated_at: "updated_at"
      members:
        updated_at: "updated_at"
        organization_id: "organization_id"
        invited_at: "invited_at"
        last_name: "last_name"
        created_at: "created_at"
        id: 6
        first_name: "first_name"
        email: "email"
        account_access: "account_access"
        status: "status"
      name: "name"
      current_spend: "current_spend"
      id: "id"
      recurly_account_id: "recurly_account_id"
      is_trial: "is_trial"
  ServerBackupRequest:
    type: "object"
    properties:
      type:
        type: "string"
    title: "ServerBackupRequest"
    example:
      type: "type"
  Backup:
    type: "object"
    properties:
      total:
        type: "number"
      max_score:
        type: "number"
      hits:
        type: "array"
        items:
          $ref: "#/definitions/Backup_hits"
    title: "Backup"
    example:
      hits:
      - Type: "Type"
        Progress: "Progress"
        State: "State"
        Size: "Size"
        CreatedAt: "CreatedAt"
        BackupId: "BackupId"
        Region: "Region"
        id: "id"
        Tags:
        - Value: "Value"
          Key: "Key"
        - Value: "Value"
          Key: "Key"
      - Type: "Type"
        Progress: "Progress"
        State: "State"
        Size: "Size"
        CreatedAt: "CreatedAt"
        BackupId: "BackupId"
        Region: "Region"
        id: "id"
        Tags:
        - Value: "Value"
          Key: "Key"
        - Value: "Value"
          Key: "Key"
      total: 0.8008281904610115
      max_score: 6.027456183070403
  Restore:
    type: "object"
    properties:
      id:
        type: "string"
      start:
        type: "string"
      end:
        type: "string"
      status:
        type: "string"
      origin:
        type: "string"
      artifact:
        type: "string"
      error:
        type: "string"
      type_restore:
        type: "string"
      organization_id:
        type: "string"
      account_id:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
    title: "Restore"
    example:
      origin: "origin"
      start: "start"
      created_at: "created_at"
      error: "error"
      deleted_at: "deleted_at"
      artifact: "artifact"
      account_id: "account_id"
      updated_at: "updated_at"
      organization_id: "organization_id"
      end: "end"
      type_restore: "type_restore"
      id: "id"
      status: "status"
  FileRestore:
    type: "object"
    properties:
      minutes:
        type: "string"
      ip:
        type: "string"
      subnetId:
        type: "string"
      vpcId:
        type: "string"
      instanceType:
        type: "string"
      supercharged:
        type: "string"
      size:
        type: "number"
    title: "FileRestore"
    example:
      subnetId: "subnetId"
      supercharged: "supercharged"
      size: 0.8008281904610115
      minutes: "minutes"
      ip: "ip"
      vpcId: "vpcId"
      instanceType: "instanceType"
  WeeklySaving:
    type: "object"
    properties:
      Monday:
        type: "string"
      Tuesday:
        type: "string"
      Wednesday:
        type: "string"
      Thursday:
        type: "string"
      Friday:
        type: "string"
      Saturday:
        type: "string"
      Sunday:
        type: "string"
    title: "WeeklySaving"
    example:
      Monday: "Monday"
      Thursday: "Thursday"
      Friday: "Friday"
      Sunday: "Sunday"
      Wednesday: "Wednesday"
      Tuesday: "Tuesday"
      Saturday: "Saturday"
  RegionDeatil:
    type: "object"
    properties:
      total:
        type: "number"
      max_score:
        type: "number"
      hits:
        type: "array"
        items:
          $ref: "#/definitions/RegionDeatil_hits"
    title: "RegionDeatil"
    example:
      hits:
      - Type: "Type"
        TagCount: 1.4658129805029452
        InstanceId: "InstanceId"
        State: "State"
        Region: "Region"
        AvailabilityZone: "AvailabilityZone"
        InstanceType: "InstanceType"
        Name: "Name"
      - Type: "Type"
        TagCount: 1.4658129805029452
        InstanceId: "InstanceId"
        State: "State"
        Region: "Region"
        AvailabilityZone: "AvailabilityZone"
        InstanceType: "InstanceType"
        Name: "Name"
      total: 0.8008281904610115
      max_score: 6.027456183070403
  SearchQuery:
    type: "object"
    properties:
      serversCount:
        type: "number"
      backupCount:
        type: "number"
      scheduleCount:
        type: "number"
      policyCount:
        type: "number"
    title: "SearchQuery"
    example:
      policyCount: 5.962133916683182
      serversCount: 0.8008281904610115
      backupCount: 6.027456183070403
      scheduleCount: 1.4658129805029452
  Credential:
    type: "object"
    properties:
      account_id:
        type: "string"
      external_id:
        type: "string"
      access_role_arn:
        type: "string"
      cloudformation_s3_url:
        type: "string"
      state:
        type: "string"
      state_reason:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
    title: "Credential"
    example:
      state_reason: "state_reason"
      account_id: "account_id"
      updated_at: "updated_at"
      access_role_arn: "access_role_arn"
      cloudformation_s3_url: "cloudformation_s3_url"
      created_at: "created_at"
      external_id: "external_id"
      state: "state"
  ServerState:
    type: "object"
    properties:
      totalServers:
        type: "number"
      serversWithPolicies:
        type: "number"
      serversWithSchedules:
        type: "number"
    title: "ServerState"
    example:
      totalServers: 0.8008281904610115
      serversWithPolicies: 6.027456183070403
      serversWithSchedules: 1.4658129805029452
  Error:
    type: "object"
    properties:
      message:
        type: "string"
    title: "Error"
  Synchronization:
    type: "object"
    properties:
      id:
        type: "number"
      account_id:
        type: "string"
      percent_complete:
        type: "number"
      status:
        type: "string"
      extract_log:
        type: "array"
        items:
          $ref: "#/definitions/Synchronization_extract_log"
      updated_at:
        type: "string"
      created_at:
        type: "string"
    example:
      account_id: "account_id"
      updated_at: "updated_at"
      created_at: "created_at"
      id: 0.8008281904610115
      extract_log:
      - extract_id: 5.962133916683182
        part: "part"
        started_at: "started_at"
        id: 1.4658129805029452
        status: "status"
      - extract_id: 5.962133916683182
        part: "part"
        started_at: "started_at"
        id: 1.4658129805029452
        status: "status"
      percent_complete: 6.027456183070403
      status: "status"
  Audit:
    type: "object"
    properties:
      id:
        type: "string"
      organization_id:
        type: "string"
      account_id:
        type: "string"
      operation:
        type: "string"
      http_code_result:
        type: "number"
      success:
        type: "string"
      message:
        type: "string"
      identity_email:
        type: "string"
      target_resource:
        type: "string"
      target_id:
        type: "string"
      body:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
    title: "Audit"
    example:
      target_resource: "target_resource"
      identity_email: "identity_email"
      created_at: "created_at"
      target_id: "target_id"
      message: "message"
      body: "body"
      account_id: "account_id"
      updated_at: "updated_at"
      success: "success"
      organization_id: "organization_id"
      id: "id"
      operation: "operation"
      http_code_result: 0.8008281904610115
  BackupsCountsTagRequest:
    type: "object"
    properties:
      tag:
        $ref: "#/definitions/AmiRestoreRequest_restore_tags"
      retention:
        $ref: "#/definitions/BackupsCountsTagRequest_retention"
    title: "BackupsCountsTagRequest"
    example:
      tag:
        Value: "Value"
        Key: "Key"
      retention:
        amount: 0.8008281904610115
        unit: "unit"
  PolicyCloneRequest:
    type: "object"
    properties:
      organization_id:
        type: "string"
      account_id:
        type: "string"
    title: "PolicyCloneRequest"
    example:
      account_id: "account_id"
      organization_id: "organization_id"
  AmiRestore:
    type: "object"
    properties:
      instance_type:
        type: "string"
      restore_tags:
        type: "array"
        items:
          $ref: "#/definitions/AmiRestoreRequest_restore_tags"
    title: "AmiRestore"
    example:
      restore_tags:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
      instance_type: "instance_type"
  Schedule:
    type: "object"
    properties:
      id:
        type: "number"
      organization_id:
        type: "string"
      timezone_location:
        type: "string"
      name:
        type: "string"
      percent_on:
        type: "number"
      hours_on:
        type: "number"
      description:
        type: "string"
      schedule_json:
        type: "string"
      is_active:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      deleted_at:
        type: "string"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      servers:
        type: "array"
        items:
          $ref: "#/definitions/Server"
    title: "Schedule"
    example:
      is_active: "is_active"
      description: "description"
      created_at: "created_at"
      schedule_json: "schedule_json"
      deleted_at: "deleted_at"
      tags:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      servers:
      - server_id: "server_id"
        type: "type"
        region: "region"
      - server_id: "server_id"
        type: "type"
        region: "region"
      percent_on: 6.027456183070403
      updated_at: "updated_at"
      organization_id: "organization_id"
      name: "name"
      id: 0.8008281904610115
      hours_on: 1.4658129805029452
      timezone_location: "timezone_location"
  BackupsTagsValuesRequest:
    type: "object"
    properties:
      tagKey:
        type: "string"
    title: "BackupsTagsValuesRequest"
    example:
      tagKey: "tagKey"
  Tag:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
    title: "Tag"
    example:
      value: "value"
      key: "key"
  Policy_objects:
    properties:
      object_id:
        type: "string"
      type:
        type: "string"
      region:
        type: "string"
    example:
      type: "type"
      region: "region"
      object_id: "object_id"
  SSHKey_KeyPairs:
    properties:
      KeyFingerprint:
        type: "string"
      KeyName:
        type: "string"
    example:
      KeyName: "KeyName"
      KeyFingerprint: "KeyFingerprint"
  BackupsCount__shards:
    properties:
      total:
        type: "number"
      successful:
        type: "number"
      failed:
        type: "number"
    example:
      total: 0.8008281904610115
      failed: 1.4658129805029452
      successful: 6.027456183070403
  AmiRestoreRequest_restore_tags:
    properties:
      Key:
        type: "string"
      Value:
        type: "string"
    example:
      Value: "Value"
      Key: "Key"
  ServerDetail_Monitoring:
    properties:
      State:
        type: "string"
    example:
      State: "State"
  ServerDetail_Placement:
    properties:
      AvailabilityZone:
        type: "string"
      GroupName:
        type: "string"
      Tenancy:
        type: "string"
    example:
      GroupName: "GroupName"
      Tenancy: "Tenancy"
      AvailabilityZone: "AvailabilityZone"
  ServerDetail_State:
    properties:
      Code:
        type: "string"
      Name:
        type: "string"
    example:
      Code: "Code"
      Name: "Name"
  ServerDetail_Ebs:
    properties:
      AttachTime:
        type: "string"
      DeleteOnTermination:
        type: "string"
      Status:
        type: "string"
      VolumeId:
        type: "string"
    example:
      Status: "Status"
      VolumeId: "VolumeId"
      AttachTime: "AttachTime"
      DeleteOnTermination: "DeleteOnTermination"
  ServerDetail_BlockDeviceMappings:
    properties:
      DeviceName:
        type: "string"
      Ebs:
        $ref: "#/definitions/ServerDetail_Ebs"
    example:
      Ebs:
        Status: "Status"
        VolumeId: "VolumeId"
        AttachTime: "AttachTime"
        DeleteOnTermination: "DeleteOnTermination"
      DeviceName: "DeviceName"
  ServerDetail_Attachment_Attachment:
    properties:
      AttachTime:
        type: "string"
      AttachmentId:
        type: "string"
      DeleteOnTermination:
        type: "string"
      DeviceIndex:
        type: "string"
      Status:
        type: "string"
    example:
      Status: "Status"
      DeviceIndex: "DeviceIndex"
      AttachmentId: "AttachmentId"
      AttachTime: "AttachTime"
      DeleteOnTermination: "DeleteOnTermination"
  ServerDetail_Attachment:
    properties:
      Attachment:
        $ref: "#/definitions/ServerDetail_Attachment_Attachment"
    example:
      Attachment:
        Status: "Status"
        DeviceIndex: "DeviceIndex"
        AttachmentId: "AttachmentId"
        AttachTime: "AttachTime"
        DeleteOnTermination: "DeleteOnTermination"
  ServerDetail_Groups:
    properties:
      GroupName:
        type: "string"
      GroupId:
        type: "string"
    example:
      GroupName: "GroupName"
      GroupId: "GroupId"
  ServerDetail_PrivateIpAddresses:
    properties:
      Primary:
        type: "string"
      PrivateDnsName:
        type: "string"
      PrivateIpAddress:
        type: "string"
    example:
      PrivateDnsName: "PrivateDnsName"
      PrivateIpAddress: "PrivateIpAddress"
      Primary: "Primary"
  ServerDetail_NetworkInterfaces:
    properties:
      Attachment:
        $ref: "#/definitions/ServerDetail_Attachment"
      Description:
        type: "string"
      Groups:
        type: "array"
        items:
          $ref: "#/definitions/ServerDetail_Groups"
      Ipv6Addresses:
        type: "array"
        items:
          $ref: "#/definitions/empty"
      MacAddress:
        type: "string"
      NetworkInterfaceId:
        type: "string"
      OwnerId:
        type: "string"
      PrivateDnsName:
        type: "string"
      PrivateIpAddress:
        type: "string"
      PrivateIpAddresses:
        type: "array"
        items:
          $ref: "#/definitions/ServerDetail_PrivateIpAddresses"
      SourceDestCheck:
        type: "string"
      Status:
        type: "string"
      SubnetId:
        type: "string"
      VpcId:
        type: "string"
    example:
      Status: "Status"
      Description: "Description"
      PrivateDnsName: "PrivateDnsName"
      PrivateIpAddress: "PrivateIpAddress"
      PrivateIpAddresses:
      - PrivateDnsName: "PrivateDnsName"
        PrivateIpAddress: "PrivateIpAddress"
        Primary: "Primary"
      - PrivateDnsName: "PrivateDnsName"
        PrivateIpAddress: "PrivateIpAddress"
        Primary: "Primary"
      Attachment:
        Attachment:
          Status: "Status"
          DeviceIndex: "DeviceIndex"
          AttachmentId: "AttachmentId"
          AttachTime: "AttachTime"
          DeleteOnTermination: "DeleteOnTermination"
      Ipv6Addresses:
      - null
      - null
      SubnetId: "SubnetId"
      MacAddress: "MacAddress"
      NetworkInterfaceId: "NetworkInterfaceId"
      SourceDestCheck: "SourceDestCheck"
      OwnerId: "OwnerId"
      VpcId: "VpcId"
      Groups:
      - GroupName: "GroupName"
        GroupId: "GroupId"
      - GroupName: "GroupName"
        GroupId: "GroupId"
  ServerDetail_StateReason:
    properties:
      Code:
        type: "string"
      Message:
        type: "string"
    example:
      Message: "Message"
      Code: "Code"
  AccountServer_State:
    properties:
      Name:
        type: "string"
    example:
      Name: "Name"
  AccountServer_hits:
    properties:
      Type:
        type: "string"
      InstanceId:
        type: "string"
      Name:
        type: "string"
      TagCount:
        type: "number"
      Tags:
        $ref: "#/definitions/Tag"
      InstanceType:
        type: "string"
      State:
        $ref: "#/definitions/AccountServer_State"
      Region:
        type: "string"
      AvailabilityZone:
        type: "string"
      Schedules:
        $ref: "#/definitions/Schedule"
      Policies:
        $ref: "#/definitions/Policy"
    example:
      Schedules:
        is_active: "is_active"
        description: "description"
        created_at: "created_at"
        schedule_json: "schedule_json"
        deleted_at: "deleted_at"
        tags:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        servers:
        - server_id: "server_id"
          type: "type"
          region: "region"
        - server_id: "server_id"
          type: "type"
          region: "region"
        percent_on: 6.027456183070403
        updated_at: "updated_at"
        organization_id: "organization_id"
        name: "name"
        id: 0.8008281904610115
        hours_on: 1.4658129805029452
        timezone_location: "timezone_location"
      Type: "Type"
      TagCount: 1.4658129805029452
      Policies:
        retention_in_days: "retention_in_days"
        objects:
        - type: "type"
          region: "region"
          object_id: "object_id"
        - type: "type"
          region: "region"
          object_id: "object_id"
        description: "description"
        created_at: "created_at"
        delete_summary: "delete_summary"
        retention_unit: "retention_unit"
        inherit_tags: "inherit_tags"
        updated_at: "updated_at"
        backup_second_region: "backup_second_region"
        system_tags:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        backup_original_region_flag: "backup_original_region_flag"
        create_summary: "create_summary"
        id: 0.8008281904610115
        backup_source: "backup_source"
        timezone_location: "timezone_location"
        perform_reboot: "perform_reboot"
        is_active: "is_active"
        backup_second_region_flag: "backup_second_region_flag"
        first_cross_account_region: "first_cross_account_region"
        retention_in_hours: 1.4658129805029452
        perform_consistent_snapshots: "perform_consistent_snapshots"
        backup_third_region_flag: "backup_third_region_flag"
        backup_third_region: "backup_third_region"
        deleted_at: "deleted_at"
        tags:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        tag_with:
        - {}
        - {}
        account_id: "account_id"
        organization_id: "organization_id"
        name: "name"
        never_delete: "never_delete"
        backup_target: "backup_target"
        retention_amount: 6.027456183070403
        create_cron: "create_cron"
        first_cross_account_flag: "first_cross_account_flag"
        first_cross_account_account_id: "first_cross_account_account_id"
      InstanceId: "InstanceId"
      State:
        Name: "Name"
      Region: "Region"
      AvailabilityZone: "AvailabilityZone"
      InstanceType: "InstanceType"
      Tags:
        value: "value"
        key: "key"
      Name: "Name"
  Volume_Attachments:
    properties:
      AttachTime:
        type: "string"
      Device:
        type: "string"
      InstanceId:
        type: "string"
      State:
        type: "string"
      VolumeId:
        type: "string"
      DeleteOnTermination:
        type: "string"
    example:
      VolumeId: "VolumeId"
      InstanceId: "InstanceId"
      Device: "Device"
      State: "State"
      AttachTime: "AttachTime"
      DeleteOnTermination: "DeleteOnTermination"
  Organization_billing:
    properties:
      id:
        type: "integer"
      is_current:
        type: "string"
      name:
        type: "string"
      price:
        type: "integer"
      interval:
        type: "string"
      category:
        type: "string"
      max_spend:
        type: "integer"
      max_users:
        type: "integer"
      max_accounts:
        type: "integer"
      max_managed_servers:
        type: "integer"
      max_schedules:
        type: "integer"
      max_policies:
        type: "integer"
      max_savings:
        type: "integer"
      slack_enabled:
        type: "string"
      webhooks_enabled:
        type: "string"
      recurly_plan_id:
        type: "string"
      cross_region_backups:
        type: "string"
      cross_account_backups:
        type: "string"
      consistent_backups_enabled:
        type: "string"
      reporting_enabled:
        type: "string"
      auditing_enabled:
        type: "string"
      file_level_restore_enabled:
        type: "string"
      sso_enabled:
        type: "string"
      phone_support_enabled:
        type: "string"
    example:
      cross_account_backups: "cross_account_backups"
      file_level_restore_enabled: "file_level_restore_enabled"
      max_savings: 4
      max_spend: 5
      reporting_enabled: "reporting_enabled"
      auditing_enabled: "auditing_enabled"
      max_managed_servers: 9
      slack_enabled: "slack_enabled"
      consistent_backups_enabled: "consistent_backups_enabled"
      max_users: 2
      recurly_plan_id: "recurly_plan_id"
      sso_enabled: "sso_enabled"
      price: 5
      cross_region_backups: "cross_region_backups"
      name: "name"
      max_schedules: 3
      phone_support_enabled: "phone_support_enabled"
      interval: "interval"
      max_accounts: 7
      id: 1
      is_current: "is_current"
      category: "category"
      max_policies: 2
      webhooks_enabled: "webhooks_enabled"
  Backup_hits:
    properties:
      id:
        type: "string"
      Type:
        type: "string"
      BackupId:
        type: "string"
      Tags:
        type: "array"
        items:
          $ref: "#/definitions/AmiRestoreRequest_restore_tags"
      State:
        type: "string"
      Size:
        type: "string"
      Progress:
        type: "string"
      Region:
        type: "string"
      CreatedAt:
        type: "string"
    example:
      Type: "Type"
      Progress: "Progress"
      State: "State"
      Size: "Size"
      CreatedAt: "CreatedAt"
      BackupId: "BackupId"
      Region: "Region"
      id: "id"
      Tags:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
  RegionDeatil_hits:
    properties:
      Type:
        type: "string"
      InstanceId:
        type: "string"
      Name:
        type: "string"
      TagCount:
        type: "number"
      InstanceType:
        type: "string"
      State:
        type: "string"
      Region:
        type: "string"
      AvailabilityZone:
        type: "string"
    example:
      Type: "Type"
      TagCount: 1.4658129805029452
      InstanceId: "InstanceId"
      State: "State"
      Region: "Region"
      AvailabilityZone: "AvailabilityZone"
      InstanceType: "InstanceType"
      Name: "Name"
  Synchronization_extract_log:
    properties:
      id:
        type: "number"
      part:
        type: "string"
      status:
        type: "string"
      started_at:
        type: "string"
      extract_id:
        type: "number"
    example:
      extract_id: 5.962133916683182
      part: "part"
      started_at: "started_at"
      id: 1.4658129805029452
      status: "status"
  BackupsCountsTagRequest_retention:
    properties:
      amount:
        type: "number"
      unit:
        type: "string"
    example:
      amount: 0.8008281904610115
      unit: "unit"
